<?php
use Drupal\Library\Entity\Category;
use Drupal\mall\Entity\Item;
use Drupal\mall\Entity\Member;
use Drupal\mall\Mall;
use Drupal\mall\x;
use Symfony\Component\Yaml\Yaml;

use Drupal\library\Library;

if ( function_exists('di') ) {
}
else {
function di( $obj ) {
    echo "<pre>";
    print_r($obj);
    echo "</pre>";
}
}

function mall_theme()
{
  $routes = Yaml::parse(file_get_contents(drupal_get_path('module', 'mall').'/mall.routing.yml'));   
  $themes = [];
  foreach($routes as $name => $info) {
    $themes[$name] = [
      'variables' => [ 'data' => null],
      'template' => $name
    ];
		
  }
  
  return $themes;
}

function mall_preprocess(&$variables, $hook)
{


	if( Mall::isFrontPage() ){
		$variables['mall_top'] = Item::getItemsWithImages( [ 'limit'=>20, 'order'=>'DESC', 'by'=>'id' ] );			
		$variables['todays_pick'] = Item::getItemsWithImages( [ 'limit'=>9, 'order'=>'DESC', 'by'=>'id' ] );	
		$variables['mall_item_list'] = Item::getItemsWithImages( [ 'limit'=>16, 'order'=>'DESC', 'by'=>'id' ] );
		$variables['#attached']['library'][] = 'mall/default';
	}

	if ( ! Mall::isMallPage() ) return;//what about front page?
	
	$variables['#attached']['library'][] = 'mall/default';
	$variables['error_list'] = Library::getError();
	$variables['notice_list'] = Library::getNotice();
	$variables['x']['months'] = x::$months;
	$variables['input'] = x::getInput();
	
	$variables['mall_member_user'] = Member::loadByUid( x::myUid() );

	/*this is a bad place fore these
	  if( empty( $variables['input']['category_root'] ) && $variables['input']['category']  ){
		$variables['input']['category_root'] = $variables['input']['category'];
	  }  
	eo this is a bad place fore these*/


	//$request = \Drupal::request();

	// page classes
	if ( $hook == 'mall' ) {		
	 //$variables['categories'] = Mall::categoryList( $variables );

	}
	else{
		//echo $hook;
	}

}


function mall_entity_load( array $entities, $type ){	
	if( $type == 'mall_item' ){		
		$entity_category_id = array_values($entities)[0]->category_id->target_id;
	}
}




